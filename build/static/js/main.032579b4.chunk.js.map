{"version":3,"sources":["reducers/index.js","actions/index.js","components/Filter.js","containers/FilterContainer.js","components/Header.js","ItemTypes.js","components/EditableLabel.js","components/Card.js","containers/CardContainer.js","static/icons/archive.svg","static/icons/delete.svg","static/icons/edit.svg","components/CardList.js","containers/CardListContainer.js","containers/BoardContainer.js","components/About.js","components/App.js","index.js","utils/localStorage.js"],"names":["rootReducer","combineReducers","lists","state","arguments","length","undefined","action","newState","Object","toConsumableArray","type","concat","id","title","archived","filter","list","listToChange","objectSpread","listToArchive","listToUnArchive","cards","listId","cardToMove","cardId","newListId","newTitle","card","cardToChange","Filter","_ref","input","onFilterChange","react_default","a","createElement","className","value","ref","node","onChange","placeholder","viewBox","d","fill","connect","dispatch","filterText","components_Filter","Header","onAddNewList","stroke","transform","href","onClick","containers_FilterContainer","ItemTypes","EditableLabel","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onKeyUp","e","keyCode","setState","isEditing","textInput","current","onBlur","allowEmptySave","onTextUpdated","onClickTitle","text","React","createRef","bind","assertThisInitialized","select","focus","prevProps","prevState","_this$props","_this$props$labelClas","labelClassName","_this$props$inputClas","inputClassName","_this$props$placehold","style","display","Component","Card","connectDragSource","isDragging","onTitleChanged","opacity","EditableLabel_EditableLabel","DragSource","beginDrag","endDrag","monitor","component","didDrop","draggedCard","getItem","dropList","getDropResult","onDropped","dragSource","ownProps","onDroppedCard","actions","onCardTitleChanged","onCardBeginEdit","components_Card","assign","_extends","target","i","source","key","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","archive_SvgArchive","svgRef","x","y","ForwardRef","forwardRef","__webpack_require__","p","delete_extends","delete_objectWithoutProperties","delete_objectWithoutPropertiesLoose","delete_ref2","width","height","delete_SvgDelete","delete_ForwardRef","edit_extends","edit_objectWithoutProperties","edit_objectWithoutPropertiesLoose","edit_ref2","edit_SvgEdit","CardList","isListTitleEditing","onClickEdit","addNewCard","connectDropTarget","isOver","canDrop","onListTitleChanged","onClickDelete","onClickArchive","onClickUnArchive","backgroundColor","c","toLowerCase","map","index","containers_CardContainer","DropTarget","drop","dropTarget","cardList","addNewList","components_Header","l","CardListContainer","About","src","frameBorder","scrolling","DragDropContext","HTML5Backend","react_router_dom","react_router","exact","path","render","containers_BoardContainer","to","persistantState","serializedState","localStorage","JSON","parse","err","loadState","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","throttle","stringify","setItem","saveState","getState","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.032579b4.chunk.js","sourcesContent":["// import { routerReducer as routing } from 'react-router-redux';\nimport { combineReducers } from 'redux';\nimport * as actions from '../actions/index';\n\n\nconst lists = (state = [], action) => {\n    let newState = [...state];\n    switch (action.type) {\n        case actions.ADD_NEW_LIST:\n            return [...state, {id: state.length, title: action.title, archived: false}];\n        case actions.DELETE_LIST:\n            return newState.filter(list => list.id !== action.id);\n        case actions.SAVE_LIST_TITLE:\n            const listToChange = state[action.id];\n            newState[action.id] = {...listToChange, title: action.title };\n            return newState;\n        case actions.ARCHIVE_LIST:\n            const listToArchive = state[action.id];\n            newState[action.id] = {...listToArchive, archived: true };\n            return newState;\n        case actions.UN_ARCHIVE_LIST:\n            const listToUnArchive = state[action.id];\n            newState[action.id] = {...listToUnArchive, archived: false };\n            return newState;\n        default:\n            return state;\n    }\n};\n\nconst cards = (state = [], action) => {\n    let newState = [...state];\n    switch (action.type) {\n        case actions.ADD_NEW_CARD:\n            return [...state, {id: state.length, title: action.title, listId: action.listId}];\n        case actions.MOVE_CARD:\n            const cardToMove = state[action.cardId];\n            newState[action.cardId] = {...cardToMove, listId: action.newListId};\n            return newState;\n        case actions.CHANGE_CARD:\n            // Remove card from state if title is empty\n            if (!action.newTitle || action.newTitle.length <= 0) {\n                return newState.filter(card => card.id !== action.cardId);\n            } else {\n                const cardToChange = state[action.cardId];\n                newState[action.cardId] = {...cardToChange, title: action.newTitle};\n                return newState;\n            }\n        case actions.DELETE_CARD:\n            return newState.filter(card => card.id !== action.cardId);\n        default:\n            return state;\n    }\n};\n\nconst filter = (state = '', action) => {\n    switch (action.type) {\n        case actions.FILTER_CARDS:\n            return action.filter;\n        default:\n            return state;\n    }\n};\n\nconst rootReducer = combineReducers({\n    lists,\n    cards,\n    filter,\n    // routing\n});\n\nexport default rootReducer;\n","export const ADD_NEW_LIST = 'ADD_NEW_LIST';\nexport const addNewList = (title = '') => ({\n    type: ADD_NEW_LIST,\n    title\n});\n\nexport const EDIT_LIST_TITLE = 'EDIT_LIST_TITLE';\nexport const editListTitle = (id) => ({\n    type: EDIT_LIST_TITLE,\n    id\n});\n\nexport const SAVE_LIST_TITLE = 'SAVE_LIST_TITLE';\nexport const saveListTitle = (id, title) => ({\n    type: SAVE_LIST_TITLE,\n    id,\n    title\n});\n\nexport const DELETE_LIST = 'DELETE_LIST';\nexport const deleteList = (id) => ({\n    type: DELETE_LIST,\n    id\n});\n\nexport const ARCHIVE_LIST = 'ARCHIVE_LIST';\nexport const archiveList = (id) => ({\n    type: ARCHIVE_LIST,\n    id\n});\n\nexport const UN_ARCHIVE_LIST = 'UN_ARCHIVE_LIST';\nexport const unArchiveList = (id) => ({\n    type: UN_ARCHIVE_LIST,\n    id\n});\n\nexport const ADD_NEW_CARD = 'ADD_NEW_CARD';\nexport const addNewCard = (listId, title = '') => ({\n    type: ADD_NEW_CARD,\n    listId,\n    title\n});\n\nexport const MOVE_CARD = 'MOVE_CARD';\nexport const moveCard = (cardId, newListId) => ({\n    type: MOVE_CARD,\n    cardId,\n    newListId\n});\n\nexport const CHANGE_CARD = 'CHANGE_CARD';\nexport const changeCard = (cardId, newTitle) => ({\n    type: CHANGE_CARD,\n    cardId,\n    newTitle\n});\n\nexport const DELETE_CARD = 'DELETE_CARD';\nexport const deleteCard = (cardId, newTitle) => ({\n    type: DELETE_CARD,\n    cardId,\n    newTitle\n});\n\nexport const FILTER_CARDS = 'FILTER_CARDS';\nexport const filterCards = (filter) => ({\n    type: FILTER_CARDS,\n    filter\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/Filter.scss';\n\nconst Filter = ({filter, onFilterChange}) => {\n    let input;\n    return (\n        <div className=\"Filter\">\n            <input\n                className=\"Filter-input\"\n                value={filter}\n                ref={node => {\n                    input = node;\n                }}\n                onChange={() => onFilterChange(input.value)} placeholder=\"Filter\"/>\n            <svg className=\"Filter-icon\" viewBox=\"0 0 56.966 56.966\">\n                <path\n                    d=\"M55.146,51.887L41.588,37.786c3.486-4.144,5.396-9.358,5.396-14.786c0-12.682-10.318-23-23-23s-23,10.318-23,23  s10.318,23,23,23c4.761,0,9.298-1.436,13.177-4.162l13.661,14.208c0.571,0.593,1.339,0.92,2.162,0.92  c0.779,0,1.518-0.297,2.079-0.837C56.255,54.982,56.293,53.08,55.146,51.887z M23.984,6c9.374,0,17,7.626,17,17s-7.626,17-17,17  s-17-7.626-17-17S14.61,6,23.984,6z\"\n                    fill=\"#FFFFFF\"/>\n            </svg>\n        </div>\n    );\n};\n\nFilter.propTypes = {\n    onFilterChange: PropTypes.func,\n    filter: PropTypes.string\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions';\nimport Filter from '../components/Filter';\nimport {connect} from 'react-redux';\n\nconst FilterContainer = ({onFilterChange, filter}) => <Filter onFilterChange={onFilterChange} filter={filter}/>;\n\nFilterContainer.propTypes = {\n    onFilterChange: PropTypes.func,\n    filter: PropTypes.string\n};\n\nconst mapStateToProps = (state) => ({\n    filter: state.filter\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onFilterChange: (filterText) => dispatch(actions.filterCards(filterText))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FilterContainer);\n","import React from 'react';\nimport FilterContainer from '../containers/FilterContainer';\nimport '../styles/Header.scss';\n\nconst Header = ({onAddNewList}) =>\n    <header className=\"Board-header\">\n        <svg className=\"logo\" viewBox=\"0 0 782 145\">\n            <g stroke=\"none\">\n                <g>\n                    <g transform=\"translate(413.000000, 0.000000)\">\n                        <path\n                            d=\"M269.268249,108.65211 C261.440791,111.83538 255.262186,122.833966 245.86801,129.086709 C245.285701,129.473376 244.703392,129.667932 244.314777,129.667932 C243.538161,129.667932 242.56785,128.892152 242.56785,125.403586 C242.56785,113.386329 246.450932,107.571646 249.751704,99.0435654 C261.209093,69.3889241 280.821259,43.9986287 298.297884,16.2809916 C299.657422,14.1494304 300.434038,11.8239241 300.434038,9.30386076 C300.434038,7.17229958 299.656809,5.42740506 298.685885,3.29584388 C297.909269,1.55033755 294.414189,0 290.530495,0 C288.394953,0 286.453106,0.193945148 283.92895,0.193945148 C274.802023,0.193945148 272.860176,13.5682068 270.724022,17.0555485 C256.160168,41.6718987 239.459547,72.1023207 230.915542,93.6161603 C229.041733,98.4390928 227.017136,103.262637 225.479841,108.212215 C217.03636,110.653354 210.710646,122.502975 200.81691,129.087321 C200.234601,129.473987 199.652292,129.668544 199.263678,129.668544 C198.487061,129.668544 197.516751,128.892764 197.516751,125.404198 C197.516751,113.386941 201.399832,107.572257 204.700605,99.0441772 C216.157993,69.3895359 235.771385,43.9992405 253.246784,16.2816034 C254.606322,14.1500422 255.383551,11.8245359 255.383551,9.30447257 C255.383551,7.17291139 254.606322,5.42801688 253.635399,3.2964557 C252.858782,1.55033755 249.36309,0 245.480008,0 C243.343854,0 241.402007,0.193945148 238.878463,0.193945148 C229.751537,0.193945148 227.808463,13.5682068 225.672922,17.0555485 C211.109068,41.6718987 194.409673,72.1023207 185.865668,93.6161603 C185.186512,95.3647257 184.487741,97.1132911 183.798777,98.8679747 C183.586694,98.9811603 183.369708,99.104135 183.147204,99.2375105 C173.243661,105.052194 164.89335,115.324557 152.854879,122.302911 C150.524417,123.658692 143.339337,128.698207 137.513796,128.698207 C136.154257,128.698207 134.98964,128.310928 133.823796,127.729093 C132.076869,126.954536 130.328716,123.272025 130.328716,122.108966 C130.328716,121.139852 130.523023,120.946519 132.46487,119.782848 C149.554106,109.510485 163.534425,94.7798312 175.574123,80.0491772 C180.040126,74.622384 185.865668,63.9621308 185.865668,56.2092194 C185.865668,51.1697046 184.118741,45.3556329 178.098279,43.2228481 C173.82597,41.6725105 168.971352,40.8979536 165.088271,40.8979536 C154.796726,40.8979536 147.223032,45.5489662 142.950723,50.0066456 C138.601794,54.6411392 134.395071,59.3998312 130.486246,64.3261603 C126.402115,60.8063924 120.642159,59.3092827 115.18194,59.3092827 C108.77409,59.3092827 96.734392,67.2567511 90.5202359,71.9083755 C89.5493123,72.6835443 88.9670033,73.0708228 88.5783887,73.0708228 C88.3846944,73.0708228 88.190387,72.8774895 88.190387,72.4895992 C88.190387,72.295654 88.5783887,70.5513713 88.5783887,67.4500844 C88.5783887,64.7366878 87.9960797,61.2481224 85.4719236,56.9837764 C84.8896146,56.0140506 81.3939219,53.8818776 77.121613,53.8818776 C71.8783804,53.8818776 67.0237625,56.4025527 67.0237625,59.1153376 C67.0237625,61.0535654 68.7706894,61.8287342 68.7706894,63.5730169 C68.7706894,64.5421308 67.994686,68.9998101 66.8294551,73.2641561 C63.5274568,85.6693038 59.4494551,97.8798945 55.1771462,110.090485 C52.8479103,116.874283 45.0799086,122.883523 45.0799086,130.248544 C45.0799086,132.573439 46.6337542,135.675338 48.7699086,138.001456 C52.2649884,141.877911 54.4011429,143.234304 57.507608,143.234304 C58.8671462,143.234304 60.4203787,142.847025 61.7799169,141.683966 C64.6926877,139.164515 66.2459203,136.645063 67.0231495,133.156498 C72.0714618,110.285042 86.6353156,94.7792194 102.752402,84.5068565 C108.189329,81.0176793 115.569329,77.3351688 116.540252,77.3351688 C117.535694,77.3351688 119.092605,77.7940295 120.661774,78.240654 C116.156542,85.576308 112.505771,93.310865 110.131176,101.563017 C109.355173,104.276414 108.966558,106.796477 108.966558,109.510485 C108.966558,113.967553 109.937482,118.620401 111.49194,123.077468 C113.627482,129.280042 117.122561,134.706835 121.977179,137.226287 C130.909799,141.878523 137.31765,144.397975 143.142578,144.397975 C146.444576,144.397975 148.968733,143.816751 151.687196,142.265802 C164.450796,135.058629 172.276415,129.590232 177.926038,124.73365 C178.081116,129.658755 179.053879,132.386224 182.563056,136.064451 C186.058136,139.747574 191.495063,143.041582 198.680143,144.593143 C199.844761,144.786477 201.010605,144.97981 202.175223,144.97981 C210.394973,144.97981 218.30702,138.311034 224.407166,131.699768 C225.113292,133.142426 226.139995,134.520232 227.61293,136.064451 C231.109236,139.747574 236.546163,143.041582 243.731243,144.593143 C244.89586,144.786477 246.060478,144.97981 247.226322,144.97981 C256.855874,144.97981 266.060646,135.828903 272.427429,128.33846 C274.549485,132.720274 280.479842,137.050696 287.616498,140.522131 C289.558346,141.491245 291.888807,142.072468 294.024962,142.072468 C302.374659,142.072468 308.394508,135.288671 313.054819,130.249768 C325.09513,117.069451 331.697287,100.78846 336.7456,80.2431224 C337.134214,78.6927848 337.717136,78.1109494 338.493752,78.1109494 C340.4356,78.1109494 342.959756,78.1109494 345.678832,77.7236709 C350.921452,76.9485021 354.999453,75.2029958 359.854071,74.4284388 C362.766842,73.8472152 362.378228,72.8787131 365.097304,71.9095992 C367.039151,71.1344304 368.592384,70.3586498 368.592384,68.4204219 C368.592384,65.1258017 362.573148,61.6366245 353.446221,61.6366245 C346.261141,61.6366245 341.988832,62.2178481 339.076061,62.2178481 C334.610058,62.2178481 333.444827,60.8614557 330.531444,53.3024895 C330.531444,53.3024895 333.444827,60.8614557 330.531444,53.3024895 C329.949135,51.7521519 329.366826,50.9763713 327.619899,49.4260338 C323.541284,45.9374684 318.492972,44.7744093 314.41497,44.7744093 C304.705734,44.7744093 296.354811,54.6601055 290.529269,62.9942405 C289.170344,64.9324684 287.228497,66.4828059 285.868958,68.6149789 C277.869872,80.5912447 270.210977,94.0970464 269.26641,108.653945 L269.268249,108.65211 Z M21.0023522,42.6410127 C25.8569701,42.6410127 28.5754336,42.2531224 29.1583555,42.2531224 C29.7406645,42.2531224 30.1292791,42.4470675 30.1292791,43.028903 C30.1292791,43.4161814 29.9349718,43.9980169 28.5754336,46.9053586 C16.7294302,72.295654 8.57465282,98.0744515 1.38896013,126.566034 C1.19465282,127.341814 0.612343854,130.249156 0.612343854,133.156498 C0.612343854,135.869895 1.38896013,138.777236 4.10742359,140.326962 C9.35065615,143.428861 13.6229651,144.785865 16.5357359,144.785865 C20.8080449,144.785865 22.9435864,142.071857 22.9435864,137.614177 C22.9435864,133.737722 23.1378937,129.666709 23.7202027,126.566034 C29.1571296,98.0738397 37.3125199,75.785443 49.9345266,52.526097 C55.9537625,41.4779536 56.7309917,40.89673 56.7309917,39.927616 C56.7309917,39.5403376 56.5366844,38.9591139 56.1486827,38.3772785 C63.9160714,36.6336076 73.2366927,35.4699367 81.7806977,35.4699367 C82.7516213,35.4699367 86.6353156,36.8269409 87.2176246,37.4081646 C88.5771628,38.7651688 89.936701,40.122173 92.2671628,40.122173 C94.20901,40.122173 97.5097824,38.7651688 98.6750133,37.99 C101.393477,36.0517722 102.753015,33.9195992 102.753015,30.4310338 C102.753015,27.1358017 90.518397,18.995 81.975005,18.995 C71.4885399,18.995 61.9742243,20.3520042 53.0409917,22.0968987 C49.1572973,22.8714557 35.1757525,25.0030169 25.077902,25.0030169 C15.3686661,25.0030169 15.9509751,23.6472363 11.8735864,23.6472363 C9.5443505,23.6472363 8.37850664,24.8096835 7.40758306,25.7787975 C6.43665947,26.7479114 5.8543505,30.6243671 5.8543505,34.1135443 C5.8543505,35.8572152 5.8543505,37.215443 6.82527409,38.3778903 C9.73804485,41.8664557 15.369892,42.6422363 21.0005133,42.6422363 C21.0005133,42.6422363 15.3692791,42.6422363 21.0005133,42.6422363 L21.0023522,42.6410127 Z M164.893963,58.3401688 C164.893963,60.0850633 164.310429,61.2481224 161.98058,64.9306329 C159.651344,68.6137553 160.621654,68.6137553 157.708271,72.4895992 C152.07765,80.0485654 145.08749,87.6075316 135.960563,95.9422785 C133.435181,98.2683966 133.047792,98.2683966 132.659178,98.2683966 C132.46487,98.2683966 132.076869,98.0744515 132.076869,97.687173 C132.076869,97.1059494 132.270563,96.3301688 134.21241,92.2603797 C140.231646,79.6612869 147.611646,71.3265401 155.767037,63.186962 C160.233653,58.7280591 162.952116,57.1777215 163.92304,57.1777215 C164.505349,57.1777215 164.89335,57.3716667 164.89335,58.3401688 C164.89335,58.3401688 164.89335,57.3716667 164.89335,58.3401688 L164.893963,58.3401688 Z M314.221276,63.3802954 C314.415583,63.3802954 314.60989,63.5736287 314.803585,63.961519 C314.997892,64.5427426 315.385894,65.1239662 316.35743,65.8997468 C317.134047,66.4809705 317.134047,69.1949789 317.134047,71.3265401 C317.134047,90.1275949 306.453887,105.633418 295.968648,121.333186 C293.637573,124.821751 292.278648,125.403586 291.11403,125.403586 C290.142493,125.403586 288.588648,122.882911 288.006339,121.333186 C287.229723,119.201013 287.035415,116.681561 287.035415,115.712447 C287.035415,100.594515 301.404962,78.1103376 310.91989,65.7058017 C312.473736,63.5736287 313.638967,63.3809072 314.221276,63.3809072 C314.221276,63.3809072 313.638967,63.3809072 314.221276,63.3809072 L314.221276,63.3802954 Z\"></path>\n                    </g>\n                    <g transform=\"translate(0.000000, 20.000000)\">\n                        <path\n                            d=\"M178.973307,47.1005859 C178.485023,49.7861462 177.813643,52.7483562 176.959147,55.9873047 C176.104651,59.2262532 175.27865,61.9280491 174.48112,64.0927734 C173.895179,65.6552813 172.898282,67.9990078 171.490397,71.1240234 C170.082512,74.2490391 168.86589,77.3129733 167.840495,80.315918 C166.815099,83.3188627 165.797856,87.1152114 164.788737,91.7050781 C163.112296,98.9967812 162.274088,104.465477 162.274088,108.111328 C162.274088,109.559903 162.477537,110.487628 162.88444,110.894531 C163.877283,111.789718 164.373698,112.855788 164.373698,114.092773 C164.373698,115.443692 163.873214,116.839348 162.872233,118.279785 C161.871251,119.720222 160.593595,120.916499 159.039225,121.868652 C157.484855,122.820806 155.934578,123.296875 154.388346,123.296875 C153.265294,123.296875 152.264327,123.028323 151.385417,122.491211 C147.788393,120.391591 145.989909,116.428415 145.989909,110.601562 C145.989909,108.241525 146.291012,105.710625 146.893229,103.008789 C147.56055,100.2744 147.926757,98.6386746 147.991862,98.1015625 C145.6481,98.3294282 142.860856,98.6142561 139.630045,98.9560547 C136.399235,99.2978533 133.453301,99.7088192 130.792155,100.188965 C128.131009,100.66911 125.376316,101.377111 122.527995,102.312988 C119.679673,103.248865 117.002291,104.408522 114.495768,105.791992 C112.282215,108.249687 111.175456,110.617827 111.175456,112.896484 C111.175456,113.514977 111.260904,114.304357 111.431803,115.264648 C111.602703,116.22494 111.720703,116.93294 111.785807,117.388672 C111.785807,118.641933 110.959806,119.874831 109.30778,121.087402 C107.655753,122.299974 105.845062,122.90625 103.875651,122.90625 C101.352852,122.90625 99.2858152,121.84018 97.674479,119.708008 C96.2747324,117.917634 95.5748696,115.818046 95.5748696,113.40918 C95.5748696,112.40006 95.7457664,110.894541 96.0875649,108.892578 C96.5107441,106.402331 97.5198486,103.667984 99.1149087,100.689453 C100.709969,97.7109226 102.516591,94.8463679 104.534831,92.0957031 C106.55307,89.3450383 108.799141,86.4479319 111.273112,83.4042969 C111.631187,82.9648416 112.855946,81.4511848 114.947428,78.8632812 C117.03891,76.2753777 118.784498,74.1473065 120.184245,72.4790039 C121.583991,70.8107013 123.077303,69.097665 124.664225,67.3398438 C126.251147,65.5820225 127.923494,63.8323655 129.681315,62.0908203 C133.099301,58.7867673 137.530409,54.9009012 142.974772,50.4331055 C148.419135,45.9653097 153.765761,42.0916505 159.014811,38.8120117 C164.263861,35.5323729 168.320624,33.8925781 171.185221,33.8925781 C172.796557,33.8925781 174.192214,34.5273374 175.372233,35.796875 C176.552252,37.0664126 177.447425,38.7143453 178.05778,40.7407227 C178.668134,42.7671 178.973307,44.8870332 178.973307,47.1005859 Z M159.490885,58.3066406 C157.488922,59.6412827 155.430023,61.0165945 153.314127,62.4326172 C151.198231,63.8486399 149.094574,65.2890552 147.003092,66.7539062 C144.91161,68.2187573 143.540368,69.2685515 142.889323,69.9033203 C138.624979,73.9235227 135.373872,77.0444225 133.135905,79.2661133 C130.897938,81.4878041 128.948901,83.6972546 127.288737,85.8945312 C128.102543,85.7154939 129.864407,85.2882521 132.574381,84.612793 C135.284356,83.9373339 137.554841,83.375816 139.385905,82.9282227 C141.216969,82.4806293 142.612625,82.1673186 143.572917,81.9882812 C144.582036,81.82552 145.884106,81.5732439 147.479167,81.2314453 C149.074227,80.8896467 150.539056,80.6129568 151.873698,80.4013672 C152.947922,78.1878145 154.066889,75.8685017 155.230631,73.4433594 C156.394374,71.018217 157.391272,68.5158007 158.221354,65.9360352 C159.051436,63.3562697 159.474609,60.8131636 159.490885,58.3066406 Z M271.046224,44.390625 C270.916015,45.2369834 270.700359,46.0548463 270.399251,46.8442383 C270.098143,47.6336302 269.699384,48.5450795 269.202962,49.5786133 C268.70654,50.6121471 268.287437,51.5520791 267.945638,52.3984375 C266.057608,57.1347893 264.344571,61.4275524 262.806478,65.2768555 C261.268384,69.1261586 259.872728,72.7638175 258.619466,76.1899414 C257.366205,79.6160653 256.210617,83.152 255.152669,86.7978516 C254.631833,88.3766355 254.009281,90.2524305 253.284993,92.425293 C252.560706,94.5981554 251.905602,96.7384335 251.319661,98.8461914 C250.733721,100.953949 250.440755,102.471675 250.440755,103.399414 C250.554688,104.034183 250.672688,104.705563 250.794759,105.413574 C250.91683,106.121586 251.071451,106.768552 251.258626,107.354492 C251.445802,107.940433 251.677733,108.453123 251.954427,108.892578 C252.214845,109.266929 252.345052,109.665688 252.345052,110.088867 C252.345052,110.691084 252.109052,111.325843 251.637044,111.993164 C250.725581,113.962575 248.959648,116.15575 246.339193,118.572754 C243.718737,120.989758 241.350596,122.198242 239.2347,122.198242 C237.444327,122.198242 235.796394,121.453621 234.290853,119.964355 C232.785311,118.47509 232.032552,116.688812 232.032552,114.605469 C232.944015,106.597616 235.377259,96.8971924 239.332357,85.5039062 C235.963199,90.0123923 232.512713,94.362121 228.980794,98.5532227 C225.448875,102.744324 221.611837,106.548811 217.469564,109.966797 C213.32729,113.384783 209.653011,115.09375 206.446615,115.09375 C205.160801,115.09375 203.956386,114.454922 202.833333,113.177246 C201.710281,111.89957 200.806969,110.377776 200.123372,108.611816 C199.439775,106.845857 199.081706,105.376959 199.049154,104.205078 C199.049154,102.902988 199.423499,99.7820885 200.1722,94.8422852 C200.920902,89.9024818 201.742834,85.1214424 202.638021,80.4990234 C198.813132,85.1702708 193.678092,92.9013132 187.232747,103.692383 C186.353837,105.189786 185.674319,106.406408 185.194173,107.342285 C184.714027,108.278162 184.360027,109.124508 184.132161,109.881348 C183.904296,110.638187 183.672364,111.765292 183.436361,113.262695 C183.200357,114.760099 183.000977,115.9401 182.838216,116.802734 C182.203447,120.334653 180.640963,122.100586 178.150716,122.100586 C175.513984,122.100586 172.60874,120.399757 169.434896,116.998047 C168.311843,115.777338 167.750325,114.247405 167.750325,112.408203 C167.750325,110.634106 168.214188,108.76238 169.141927,106.792969 C170.574226,103.798162 171.998365,101.055677 173.414388,98.5654297 C174.830411,96.0751829 176.421378,93.4466284 178.187337,90.6796875 C179.953297,87.9127466 181.816885,85.1092264 183.778157,82.269043 C185.73943,79.4288595 187.664053,76.674167 189.552083,74.0048828 C190.496098,72.6376885 191.769686,70.7578245 193.372884,68.3652344 C194.976082,65.9726443 197.075671,62.7988479 199.671712,58.84375 C202.267754,54.8886521 204.318515,51.7596144 205.824056,49.456543 C207.329597,47.1534716 208.302081,45.6357458 208.741536,44.9033203 C211.654962,39.9065505 215.357725,37.4082031 219.849935,37.4082031 C225.904653,37.4082031 228.931966,39.6379985 228.931966,44.0976562 C228.931966,46.2461045 228.101896,49.1839006 226.441732,52.9111328 C225.953448,53.9202524 225.55062,54.7462533 225.233236,55.3891602 C224.915851,56.032067 224.594403,56.6749642 224.26888,57.3178711 C223.943358,57.960778 223.536461,58.7867788 223.048177,59.7958984 C221.876296,62.253593 220.928226,65.0896649 220.203939,68.3041992 C219.479651,71.5187335 218.938478,74.6599781 218.580404,77.7280273 C218.222329,80.7960765 217.872397,84.4215286 217.530599,88.6044922 C220.623062,85.1702302 224.342101,80.6902946 228.687825,75.1645508 C233.03355,69.638807 237.330382,63.991077 241.57845,58.2211914 C245.826519,52.4513058 248.984039,48.0446116 251.051107,45.0009766 C252.515958,42.8199761 254.338856,40.9401121 256.519857,39.3613281 C258.700857,37.7825442 261.044584,36.9931641 263.551107,36.9931641 C265.374032,36.9931641 267.078931,37.668613 268.665853,39.0195312 C270.252775,40.3704495 271.046224,42.1607961 271.046224,44.390625 Z M306.307617,45.4892578 C305.363602,47.4749448 303.931325,49.4443262 302.010742,51.3974609 C301.034175,52.3577522 299.662932,53.5499603 297.896973,54.9741211 C296.131013,56.3982819 294.658046,57.6149038 293.478027,58.6240234 C292.298008,59.6331431 291.138352,60.8050063 289.999023,62.1396484 C288.859695,63.4742905 287.923832,64.9309817 287.191406,66.5097656 C287.142578,66.7539075 287.101888,67.087563 287.069336,67.5107422 C287.036784,67.9339214 286.992025,68.2757148 286.935059,68.5361328 C286.878092,68.7965508 286.735678,69.1139304 286.507812,69.4882812 C283.968737,73.296894 280.534527,75.2011719 276.205078,75.2011719 C274.837884,75.2011719 273.779952,74.5542057 273.03125,73.2602539 C272.282548,71.9663021 271.908203,70.3102314 271.908203,68.2919922 C271.908203,65.6389841 272.469721,63.1406367 273.592773,60.796875 C274.78093,58.3066282 276.156242,56.1378673 277.71875,54.2905273 C279.281258,52.4431874 281.580226,49.94484 284.615723,46.7954102 C287.65122,43.6459803 289.811843,41.1842537 291.097656,39.4101562 C291.862634,38.2871038 292.493324,37.3675166 292.989746,36.6513672 C293.486168,35.9352178 294.027341,35.2719757 294.613281,34.6616211 C295.199222,34.0512665 295.850257,33.5711281 296.566406,33.2211914 C297.282556,32.8712548 298.128901,32.6962891 299.105469,32.6962891 C299.902999,32.6962891 300.537758,32.7613926 301.009766,32.8916016 C301.156251,32.9241538 301.457354,33.0014642 301.913086,33.1235352 C302.368817,33.2456061 302.735025,33.3066406 303.011719,33.3066406 C304.297532,33.3066406 305.33512,34.0227793 306.124512,35.4550781 C306.913904,36.887377 307.308594,38.6044822 307.308594,40.6064453 C307.308594,42.5107517 306.974938,44.1383396 306.307617,45.4892578 Z M372.770182,39.1904297 C374.072272,39.7112656 375.097653,40.7976805 375.846354,42.449707 C376.595056,44.1017335 376.969401,45.9856665 376.969401,48.1015625 C376.969401,51.4218916 376.118986,54.3515498 374.418132,56.890625 C372.717277,59.4297002 370.328792,60.6992188 367.252604,60.6992188 C365.771477,60.6992188 364.77051,60.3777701 364.249675,59.7348633 C363.728839,59.0919564 363.102217,57.8834724 362.369792,56.109375 C362.255859,55.8977854 362.182617,55.7919922 362.150065,55.7919922 C358.585594,55.7919922 354.834004,56.1215787 350.895182,56.7807617 C346.956361,57.4399447 343.054219,58.4938079 339.188639,59.9423828 C335.32306,61.3909578 331.876643,63.246408 328.849284,65.5087891 C331.55112,65.1669905 334.55402,64.9960938 337.858073,64.9960938 C342.513044,64.9960938 347.509739,65.2646458 352.848307,65.8017578 C357.731144,66.2900415 361.555976,67.4537668 364.322917,69.2929688 C367.089858,71.1321707 368.766273,74.2327256 369.352214,78.5947266 C369.433594,79.2457715 369.653319,80.1002551 370.011393,81.1582031 C370.369468,82.2161511 370.589192,82.9973933 370.670573,83.5019531 C370.670573,86.7246255 370.100917,89.1578694 368.961589,90.8017578 C365.72264,95.3753484 362.080912,99.5867321 358.036296,103.436035 C353.991679,107.285338 349.637881,110.642238 344.974772,113.506836 C340.311663,116.371434 335.457382,118.584953 330.411784,120.147461 C325.366186,121.709969 320.345077,122.491211 315.348307,122.491211 C312.011702,122.491211 308.878595,122.157555 305.948893,121.490234 C304.207348,121.099607 302.864588,120.436365 301.920573,119.500488 C300.976558,118.564611 300.317385,117.445645 299.943034,116.143555 C299.568683,114.841465 299.353028,113.380705 299.296061,111.76123 C299.239095,110.141756 299.194336,108.591479 299.161784,107.110352 C299.17806,105.385083 299.609371,103.659839 300.455729,101.93457 C301.302088,100.209301 302.351882,98.8055067 303.605143,97.7231445 C304.858405,96.6407823 306.079096,96.0996094 307.267253,96.0996094 C308.894865,96.0996094 310.091142,97.1331277 310.85612,99.2001953 C311.263023,100.534837 311.564127,101.527666 311.75944,102.178711 C311.954754,102.829756 312.32503,103.374998 312.87028,103.814453 C313.41553,104.253908 314.412428,104.685219 315.861003,105.108398 C317.244473,105.499025 318.806958,105.694336 320.548503,105.694336 C323.754899,105.694336 327.274558,104.974128 331.107585,103.533691 C334.940612,102.093255 338.732891,99.9529764 342.484538,97.112793 C346.236184,94.2726095 349.560532,90.8668818 352.457682,86.8955078 C353.320317,85.723627 353.751628,84.8935571 353.751628,84.4052734 C353.751628,83.5426389 352.417006,82.8753279 349.747721,82.4033203 C347.127266,81.8662083 343.660503,81.5976562 339.347331,81.5976562 C333.943658,81.5976562 325.545304,82.2324155 314.152018,83.5019531 C312.166331,83.5019531 310.673019,82.3870554 309.672038,80.1572266 C308.671056,77.9273977 308.170573,75.2418777 308.170573,72.1005859 C308.170573,68.6826001 308.634436,66.0459077 309.562175,64.1904297 C312.296563,58.6565479 317.56181,54.196957 325.358073,50.8115234 C325.96029,50.5185532 326.871739,50.1157252 328.092448,49.6030273 C329.313157,49.0903295 330.501296,48.5898462 331.656901,48.1015625 C337.239611,45.7578008 341.686995,43.979661 344.999186,42.7670898 C348.311377,41.5545187 351.77814,40.573897 355.399577,39.8251953 C359.021014,39.0764937 362.90688,38.7021484 367.057292,38.7021484 C369.970718,38.7021484 371.874996,38.8649072 372.770182,39.1904297 Z\"></path>\n                        <path\n                            d=\"M106.706299,12.590332 C105.632075,15.4223774 103.923107,18.8342086 101.579346,22.8259277 C99.2355839,26.8176469 97.2458577,28.8134766 95.6101074,28.8134766 C94.7556109,28.8134766 93.4372647,27.9650964 91.6550292,26.2683105 C89.8727938,24.5715247 88.7375512,23.5644547 88.2492675,23.2470703 C86.3205469,22.0507753 83.7204753,21.4526367 80.4489745,21.4526367 C76.933332,21.4526367 73.0637418,22.0080511 68.8400878,23.1188965 C64.6164339,24.2297419 61.2839477,25.3710879 58.8425292,26.5429688 C52.0553859,29.8144695 46.2143799,33.0248866 41.3193359,36.1743164 C36.4242919,39.3237462 32.8659778,43.1689226 30.644287,47.7099609 C35.8200942,46.5136659 39.8117535,45.5981477 42.6193847,44.9633789 C45.4270159,44.3286101 48.179674,43.7548854 50.8774413,43.2421875 C53.5752087,42.7294896 56.2729357,42.3205582 58.9707031,42.0153809 C61.6684705,41.7102036 64.482163,41.5576172 67.4118652,41.5576172 C71.3669631,41.5576172 75.8591057,41.9604452 80.8884277,42.7661133 C84.6726263,43.4008821 87.8220089,44.7924697 90.3366699,46.940918 C92.8513309,49.0893662 94.7067811,51.7382655 95.9030761,54.8876953 C97.0993712,58.0371251 97.6975097,61.4916804 97.6975097,65.2514648 C97.6975097,69.5239471 96.7941984,74.1259519 94.9875488,79.0576172 C92.4973019,85.5762045 88.3347459,91.55759 82.4997558,97.0019531 C76.6647657,102.446316 70.0425175,107.066631 62.6328124,110.863037 C55.2231074,114.659443 47.7280652,117.558584 40.1474609,119.560547 C32.5668566,121.56251 25.7492978,122.563477 19.69458,122.563477 C15.9103814,122.563477 11.9065152,121.806648 7.68286127,120.292969 C5.80296906,119.609372 4.20996741,117.888197 2.90380853,115.129395 C1.59764966,112.370592 0.944580019,109.538589 0.944580019,106.633301 C0.944580019,104.558095 1.1887182,102.95899 1.67700189,101.835938 C4.31373383,94.6337531 7.12132294,91.0327148 10.0998535,91.0327148 C10.9543499,91.0327148 11.8881785,91.9665434 12.9013671,93.8342285 C13.9145558,95.7019136 15.2390054,97.2521911 16.8747558,98.4851074 C18.5105062,99.7180237 21.2448538,100.334473 25.0778808,100.334473 C26.5671461,100.334473 28.1479408,100.36499 29.8203124,100.426025 C31.4926841,100.487061 32.7683061,100.517578 33.6472167,100.517578 C40.1413898,100.517578 45.8908441,99.4067494 50.8957519,97.1850586 C57.5364101,94.2797706 64.1586583,90.5993875 70.7626953,86.1437988 C77.3667322,81.6882101 81.2912535,77.2754125 82.5363769,72.9052734 C82.7316904,72.3925756 82.8293456,71.6357472 82.8293456,70.6347656 C82.8293456,67.8271344 81.3156889,65.5749597 78.28833,63.8781738 C75.2609711,62.181388 71.6355191,61.3330078 67.4118652,61.3330078 C65.141346,61.3330078 63.0905853,61.5405253 61.2595214,61.9555664 C58.1100916,62.6147494 54.2038807,63.2434052 49.5407714,63.8415527 C44.8776622,64.4397003 41.2644171,65.0378388 38.7009277,65.6359863 C36.1374383,66.2341339 33.5984012,67.2534108 31.0837402,68.6938477 C27.7389969,70.5981541 24.7483041,71.550293 22.1115722,71.550293 C19.841053,71.550293 17.7902923,70.8544991 15.9592285,69.4628906 C11.7599887,66.3867034 9.66040033,62.4316648 9.66040033,57.5976562 C9.66040033,51.616181 12.8097829,44.6216221 19.1086425,36.6137695 C22.6242851,32.048317 25.993392,28.2580717 29.2160644,25.2429199 C32.4387368,22.2277681 35.8993955,19.5971792 39.5981445,17.3510742 C43.2968934,15.1049692 48.2101744,12.5659321 54.3381347,9.73388672 C58.3176468,7.90282288 62.6022719,6.31592468 67.1921386,4.97314453 C71.7820053,3.63036438 76.3473893,2.5927771 80.8884277,1.86035156 C85.429466,1.12792603 89.6286428,0.76171875 93.4860839,0.76171875 C95.0974201,0.76171875 96.9955945,1.19506403 99.180664,2.06176758 C101.365734,2.92847113 103.239494,4.11254132 104.802002,5.61401367 C106.36451,7.11548602 107.145752,8.7451084 107.145752,10.5029297 C107.145752,11.1621127 106.999269,11.8579065 106.706299,12.590332 Z\"></path>\n                    </g>\n                </g>\n            </g>\n        </svg>\n        <a href=\"#\" className=\"button-new-list\" onClick={onAddNewList}>\n            <span className=\"icon-plus\">+</span>\n        </a>\n        <FilterContainer/>\n    </header>;\n\nexport default Header;\n","export default {\n    CARD: 'card',\n    LIST: 'list'\n};\n","import React from 'react';\nimport '../styles/EditableLabel.scss';\n\nexport default class EditableLabel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {isEditing: !props.text || props.text.length <= 0}\n        this.textInput = React.createRef();\n\n        this.onKeyUp = this.onKeyUp.bind(this);\n        this.onClickTitle = this.onClickTitle.bind(this);\n        this.onBlur = this.onBlur.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.state.isEditing) {\n            this.textInput.current.select();\n            this.textInput.current.focus();\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.isEditing && !prevState.isEditing) {\n            this.textInput.current.select();\n            this.textInput.current.focus();\n        }\n    }\n\n    // Note: onBlur always fires after this, so it looks after saving state\n    onKeyUp = e => {\n        switch (e.keyCode) {\n            case 13: // Enter\n                // if (this.textInput.current.value) {\n                //     this.props.onTextUpdated(this.textInput.current.value)\n                // }\n                this.setState({'isEditing': false});\n                break;\n            case 27: // ESC\n                this.textInput.current.value = ''\n                this.setState({'isEditing': false});\n        }\n    }\n\n    // This event does the actual state update\n    onBlur = () => {\n        if (this.props.allowEmptySave || this.textInput.current.value) {\n            this.props.onTextUpdated(this.textInput.current.value)\n        }\n        this.textInput.current.value = ''\n        this.setState({'isEditing': false})\n    }\n\n    onClickTitle = e => {\n        this.setState({'isEditing': true})\n    }\n\n    render() {\n        const {\n            text,\n            labelClassName = 'editable-label__label',\n            inputClassName = 'editable-label__input',\n            placeholder = 'Click to Edit'\n        } = this.props;\n\n        return (\n            <div className={this.state.isEditing ? 'editing' : ''}>\n                <span className={labelClassName}\n                      style={{display: this.state.isEditing ? 'none' : 'block'}}\n                      onClick={this.onClickTitle}>{text}</span>\n                <input\n                    className={inputClassName}\n                    type=\"text\"\n                    placeholder={text && text.length ? text : placeholder}\n                    style={{display: this.state.isEditing ? 'block' : 'none'}}\n                    onKeyUp={this.onKeyUp}\n                    onBlur={this.onBlur}\n                    ref={this.textInput}\n                />\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragSource } from 'react-dnd';\nimport ItemTypes from '../ItemTypes';\nimport '../styles/Card.scss';\nimport EditableLabel from '../components/EditableLabel';\n\nclass Card extends React.Component {\n    static propTypes = {\n        id: PropTypes.number,\n        title: PropTypes.string,\n        onDropped: PropTypes.func,\n        onTitleChanged: PropTypes.func,\n        onCardBeginEdit: PropTypes.func,\n\n        // Injected by React DnD:\n        isDragging: PropTypes.bool.isRequired,\n        connectDragSource: PropTypes.func.isRequired,\n    };\n\n    render() {\n        const { title, connectDragSource, isDragging, onTitleChanged } = this.props;\n        return connectDragSource(\n            <div className=\"Card\" style={{opacity: isDragging ? 0.5 : 1}}>\n                <div className=\"Card-title\">\n                    {/**\n                     * ....allowEmptySave={true}....\n                     * The way it works is so if a user adds a card, action ADD_NEW_CARD will fire\n                     * This basically adds an empty card to the list..\n                     * But then if the user doesn't type anything and hits enter,\n                     * we still need onTextUpdated to fire. This will fire the CHANGE_CARD action. The reducer will\n                     * then see an empty title, and remove the card from list\n                     * TODO: Maybe there is a better way to do this..\n                     **/}\n                    <EditableLabel text={title} onTextUpdated={onTitleChanged} allowEmptySave={true} />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst cardSource = {\n    beginDrag(props) {\n        return {\n            id: props.id\n        };\n    },\n\n    endDrag(props, monitor, component) {\n        if (!monitor.didDrop()) {\n            return;\n        }\n\n        // When dropped on a compatible target, do something\n        const draggedCard = monitor.getItem();\n        const dropList = monitor.getDropResult();\n        props.onDropped(draggedCard.id, dropList.id);\n    }\n};\n\n/**\n * Specifies the props to inject into your component.\n */\nconst collect = (connect, monitor) => {\n    return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    };\n};\n\nexport default DragSource(ItemTypes.CARD, cardSource, collect)(Card);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions';\nimport Card from '../components/Card';\nimport {connect} from 'react-redux';\n\nconst CardContainer = ({card, onDroppedCard, onCardTitleChanged, onCardBeginEdit}) =>\n    <Card {...card} onDropped={onDroppedCard} onTitleChanged={onCardTitleChanged}\n                 onCardBeginEdit={onCardBeginEdit}/>;\n\nCardContainer.propTypes = {\n    card: PropTypes.object,\n    onDroppedCard: PropTypes.func,\n    onCardTitleChanged: PropTypes.func,\n    onCardBeginEdit: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n    card: state.cards[ownProps.id]\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    onDroppedCard: (cardId, listId) => dispatch(actions.moveCard(cardId, listId)),\n    onCardTitleChanged: (newTitle) => dispatch(actions.changeCard(ownProps.id, newTitle))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CardContainer);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M56.954,1H3.046C1.366,1,0,2.366,0,4.046V18.01c0,0.553,0.447,1,1,1h2V53v5c0,0.553,0.447,1,1,1h52c0.553,0,1-0.447,1-1v-5 V19.01h2c0.553,0,1-0.447,1-1V4.046C60,2.366,58.634,1,56.954,1z M55,57H5v-3h50V57z M55,52H5V19.01h50V52z M58,17.01h-2H4H2V4.046 C2,3.469,2.469,3,3.046,3h53.908C57.531,3,58,3.469,58,4.046V17.01z\"\n}), React.createElement(\"path\", {\n  d: \"M16,41h28c0.553,0,1-0.447,1-1V26c0-0.553-0.447-1-1-1H16c-0.553,0-1,0.447-1,1v14C15,40.553,15.447,41,16,41z M17,27h26 v12H17V27z\"\n}), React.createElement(\"path\", {\n  d: \"M20,32h6c0.553,0,1-0.447,1-1s-0.447-1-1-1h-6c-0.553,0-1,0.447-1,1S19.447,32,20,32z\"\n}), React.createElement(\"path\", {\n  d: \"M30,32c0.26,0,0.52-0.11,0.71-0.29C30.89,31.52,31,31.26,31,31c0-0.261-0.11-0.521-0.29-0.71c-0.38-0.37-1.05-0.37-1.42,0 C29.109,30.479,29,30.739,29,31c0,0.27,0.109,0.52,0.29,0.71C29.479,31.89,29.729,32,30,32z\"\n}), React.createElement(\"path\", {\n  d: \"M40,34H24c-0.553,0-1,0.447-1,1s0.447,1,1,1h16c0.553,0,1-0.447,1-1S40.553,34,40,34z\"\n}), React.createElement(\"path\", {\n  d: \"M19.29,34.29C19.109,34.479,19,34.739,19,35c0,0.26,0.109,0.52,0.29,0.71C19.479,35.89,19.729,36,20,36 c0.27,0,0.52-0.11,0.71-0.29C20.89,35.52,21,35.26,21,35c0-0.261-0.11-0.521-0.29-0.71C20.34,33.92,19.67,33.92,19.29,34.29z\"\n}), React.createElement(\"path\", {\n  d: \"M39,5.01H21c-2.757,0-5,2.243-5,5s2.243,5,5,5h18c2.757,0,5-2.243,5-5S41.757,5.01,39,5.01z M39,13.01H21 c-1.654,0-3-1.346-3-3s1.346-3,3-3h18c1.654,0,3,1.346,3,3S40.654,13.01,39,13.01z\"\n}));\n\nvar SvgArchive = function SvgArchive(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    className: \"icon-archive\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 60 60\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArchive, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/archive.4c1bf61a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M640.35,91.169H536.971V23.991C536.971,10.469,526.064,0,512.543,0c-1.312,0-2.187,0.438-2.614,0.875 C509.491,0.438,508.616,0,508.179,0H265.212h-1.74h-1.75c-13.521,0-23.99,10.469-23.99,23.991v67.179H133.916 c-29.667,0-52.783,23.116-52.783,52.783v38.387v47.981h45.803v491.6c0,29.668,22.679,52.346,52.346,52.346h415.703 c29.667,0,52.782-22.678,52.782-52.346v-491.6h45.366v-47.981v-38.387C693.133,114.286,670.008,91.169,640.35,91.169z  M285.713,47.981h202.84v43.188h-202.84V47.981z M599.349,721.922c0,3.061-1.312,4.363-4.364,4.363H179.282 c-3.052,0-4.364-1.303-4.364-4.363V230.32h424.431V721.922z M644.715,182.339H129.551v-38.387c0-3.053,1.312-4.802,4.364-4.802 H640.35c3.053,0,4.365,1.749,4.365,4.802V182.339z\"\n}), React.createElement(\"rect\", {\n  x: 475.031,\n  y: 286.593,\n  width: 48.418,\n  height: 396.942\n}), React.createElement(\"rect\", {\n  x: 363.361,\n  y: 286.593,\n  width: 48.418,\n  height: 396.942\n}), React.createElement(\"rect\", {\n  x: 251.69,\n  y: 286.593,\n  width: 48.418,\n  height: 396.942\n})));\n\nvar SvgDelete = function SvgDelete(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    className: \"icon-delete\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"774.266px\",\n    height: \"774.266px\",\n    viewBox: \"0 0 774.266 774.266\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgDelete, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/delete.14945043.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  d: \"M438.931,30.403c-40.4-40.5-106.1-40.5-146.5,0l-268.6,268.5c-2.1,2.1-3.4,4.8-3.8,7.7l-19.9,147.4 c-0.6,4.2,0.9,8.4,3.8,11.3c2.5,2.5,6,4,9.5,4c0.6,0,1.2,0,1.8-0.1l88.8-12c7.4-1,12.6-7.8,11.6-15.2c-1-7.4-7.8-12.6-15.2-11.6 l-71.2,9.6l13.9-102.8l108.2,108.2c2.5,2.5,6,4,9.5,4s7-1.4,9.5-4l268.6-268.5c19.6-19.6,30.4-45.6,30.4-73.3 S458.531,49.903,438.931,30.403z M297.631,63.403l45.1,45.1l-245.1,245.1l-45.1-45.1L297.631,63.403z M160.931,416.803l-44.1-44.1 l245.1-245.1l44.1,44.1L160.931,416.803z M424.831,152.403l-107.9-107.9c13.7-11.3,30.8-17.5,48.8-17.5c20.5,0,39.7,8,54.2,22.4 s22.4,33.7,22.4,54.2C442.331,121.703,436.131,138.703,424.831,152.403z\"\n}));\n\nvar SvgEdit = function SvgEdit(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    className: \"icon-edit\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 469.331 469.331\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgEdit, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/edit.a2fddfc1.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DropTarget } from 'react-dnd';\nimport ItemTypes from '../ItemTypes';\nimport CardContainer from '../containers/CardContainer';\nimport EditableLabel from '../components/EditableLabel';\nimport '../styles/CardList.scss';\nimport { ReactComponent as IconArchive } from '../static/icons/archive.svg';\nimport { ReactComponent as IconDelete } from '../static/icons/delete.svg';\nimport { ReactComponent as IconEdit } from '../static/icons/edit.svg';\n\nconst cardTarget = {\n    drop(props) {\n        return { id: props.id };\n    },\n};\n\nclass CardList extends React.Component  {\n    constructor(props) {\n        super(props);\n        this.onClickEdit = this.onClickEdit.bind(this);\n    }\n    static propTypes = {\n        id: PropTypes.number,\n        title: PropTypes.string,\n        addNewCard: PropTypes.func,\n        cards: PropTypes.array,\n        filter: PropTypes.string,\n        onTitleChanged: PropTypes.func,\n        onTitleChanged1: PropTypes.func,\n\n        connectDropTarget: PropTypes.func.isRequired,\n        isOver: PropTypes.bool.isRequired,\n        canDrop: PropTypes.bool.isRequired,\n    };\n\n    state = {isListTitleEditing: false}\n\n    onClickEdit = () => {\n        this.setState({isListTitleEditing: true })\n    }\n\n    render() {\n        const {\n            title,\n            cards,\n            filter,\n            addNewCard,\n            connectDropTarget,\n            isOver,\n            canDrop,\n            onListTitleChanged,\n            onClickDelete,\n            onClickArchive,\n            onClickUnArchive,\n            archived\n        } = this.props;\n\n        const isActive = canDrop && isOver;\n\n        let backgroundColor = '#E2E4E6';\n        if (isActive) {\n            backgroundColor = '#8ac17c';\n        } else if (canDrop) {\n            backgroundColor = '#f9dd4d';\n        }\n\n        return connectDropTarget(\n            <div className=\"CardList\" style={{backgroundColor}}>\n                <div className=\"CardList-header\">\n                    <div className=\"CardList-title\">\n                        <EditableLabel text={title} onTextUpdated={onListTitleChanged} placeholder=\"New List\" />\n                    </div>\n                    <div className=\"CardList-actions\" style={{display: archived ? 'none' : 'block'}}>\n                        {/*<button title=\"Edit\" className=\"list-edit\" onClick={this.onClickEdit}><IconEdit/></button>*/}\n                        <button title=\"Archive\" className=\"list-archive\" onClick={onClickArchive}><IconArchive/></button>\n                        <button title=\"Delete\" className=\"list-delete\" onClick={onClickDelete}><IconDelete/></button>\n                    </div>\n                    <div className=\"CardList-actions\" style={{display: archived ? 'block' : 'none'}}>\n                        <button title=\"Un Archive\" className=\"list-un-archive\" onClick={onClickUnArchive}>unarchive</button>\n                    </div>\n                </div>\n                {\n                    cards\n                    .filter((c) => c.title.toLowerCase().indexOf(filter.toLowerCase()) !== -1) // Filter the cards based on the filter string\n                    .map((c, index) => <CardContainer key={index} id={c.id}/>) // Map to CardContainer\n                }\n                <a href=\"#\" className=\"Cardlist-addCard\" onClick={addNewCard}>+ Add a card</a>\n            </div>\n        );\n    }\n}\n\nexport default DropTarget(ItemTypes.CARD, cardTarget, (connect, monitor) => ({\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n    canDrop: monitor.canDrop(),\n}))(CardList);\n","import React from 'react';\nimport * as actions from '../actions';\nimport CardList from '../components/CardList';\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = (state, ownProps) => {\n    const cardList = state.lists[ownProps.id];\n    return {\n        id: ownProps.id,\n        title: cardList.title,\n        cards: state.cards.filter(card => card.listId === ownProps.id),\n        filter: state.filter,\n        archived: cardList.archived\n    };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    addNewCard: () => dispatch(actions.addNewCard(ownProps.id)),\n    onListTitleChanged: (newTitle) => dispatch(actions.saveListTitle(ownProps.id, newTitle)),\n    onClickEdit: () => dispatch(actions.editListTitle(ownProps.id)),\n    onClickDelete: () => dispatch(actions.deleteList(ownProps.id)),\n    onClickArchive: () => dispatch(actions.archiveList(ownProps.id)),\n    onClickUnArchive: () => dispatch(actions.unArchiveList(ownProps.id))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CardList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport Header from '../components/Header';\nimport * as actions from '../actions';\nimport CardListContainer from '../containers/CardListContainer';\nimport '../styles/BoardContainer.scss';\n\nconst BoardContainer = ({lists, addNewList, archived}) => {\n    return (\n        <div className=\"BoardContainer\">\n            <Header onAddNewList={addNewList}/>\n            <div className=\"CardListsContainer\">\n                {lists\n                    .filter(l => l.archived === archived)\n                    .map((list, index) => <CardListContainer id={list.id} key={index}/>)}\n            </div>\n        </div>);\n}\n\n\nBoardContainer.propTypes = {\n    lists: PropTypes.array,\n    addNewList: PropTypes.func\n};\n\nconst mapStateToProps = (state) => ({\n    lists: state.lists\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    addNewList: () => dispatch(actions.addNewList())\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(BoardContainer);\n","import React from 'react';\nimport '../styles/About.scss';\n\nconst About = () =>\n    <div className=\"About\">\n        <div className=\"About-text\">\n            Hey! Thanks for using this example. If you like it, consider starring the repo :))\n            <p>Or visit my website: <a href=\"http://samgarg.me\">http://samgarg.me</a></p>\n        </div>\n        <div>\n            <iframe\n                src=\"https://ghbtns.com/github-btn.html?user=samgarg86&repo=react-trello&type=star&size=large\"\n                frameBorder=\"0\"\n                scrolling=\"0\">\n            </iframe>\n        </div>\n    </div>;\n\n\nexport default About;\n","import React from 'react';\nimport {BrowserRouter as Router, Link, Route} from 'react-router-dom';\nimport '../styles/core/reset.scss';\nimport '../styles/App.scss';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { DragDropContext } from 'react-dnd';\nimport BoardContainer from \"../containers/BoardContainer\";\nimport About from \"./About\";\n\nconst App = () =>\n    <Router>\n        <div className=\"AppContainer\">\n            <div>\n                <Route exact path=\"/\" render={(props) => <BoardContainer {...props} archived={false} />} />\n                <Route path=\"/archived\" render={(props) => <BoardContainer {...props} archived={true} />} />\n                <Route path=\"/about\" component={About} />\n            </div>\n\n            <nav className=\"App-footer\">\n                <Link to=\"/\">Board</Link>\n                <Link to=\"/archived\">Show Archived</Link>\n                <Link to=\"/about\">About</Link>\n            </nav>\n        </div>\n    </Router>;\n\nexport default DragDropContext(HTML5Backend)(App);\n","import React from 'react';\nimport { render } from 'react-dom';\n// import { syncHistoryWithStore } from 'react-router-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\nimport {Provider} from 'react-redux';\nimport App from './components/App';\nimport { loadState, saveState } from './utils/localStorage';\nimport throttle from 'lodash/throttle';\n\nconst initialState = {\n    lists: [{\n        id: 0,\n        title: 'Todo',\n        archived: false\n    },{\n        id: 1,\n        title: 'Doing',\n        archived: false\n    },{\n        id: 2,\n        title: 'Done',\n        archived: false\n    }]\n};\n\nconst persistantState = loadState() ||  initialState;\n\nconst store = createStore(\n    rootReducer,\n    persistantState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nstore.subscribe(throttle(() => {\n    saveState({\n        lists: store.getState().lists,\n        cards: store.getState().cards\n    });\n}, 1000));\n\n// const history = syncHistoryWithStore(browserHistory, store);\n\nrender(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n","export const loadState = () => {\n    try {\n        const serializedState = localStorage.getItem('state');\n        if (serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return undefined;\n    }\n};\n\nexport const saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem('state', serializedState);\n    } catch (err) {\n        // Ignore write errors.\n    }\n};\n"],"sourceRoot":""}